#Simple tool to convert spherical coordinates to catresian coordinates
import numpy as np

def spherical2cartesian(r,theta,phi,angle = 'radians'): 
    #inputs are numbers, theta=0 aligns with x-axis, phi=0 alligns with z-axis
    if angle == 'degrees':
        theta *= 2*np.pi/360
        phi *= 2*np.pi/360
    elif angle == 'revolutions' or angle == 'tauradians':
        theta *= 2*np.pi
        phi*= 2*np.pi
    elif angle == 'piradians':
        theta *= np.pi
        phi*= np.pi
        
    z = r*np.cos(phi)
    xpy = r*np.sin(phi)
    if abs(z/xpy) < 10**-15:
        z = 0
    x = xpy*np.cos(theta)
    y = xpy*np.sin(theta) 
    return [x,y,z]
    
    
    #Converding cartesian coordinates to spherical
    def cartesian2spherical(x,y,z,angle = 'radians'):
    
    r = np.sqrt(x**2 + y**2 + z**2)
    phi = np.arccos(z/r)
    theta = np.arctan(y/x)
    
    if angle == 'degrees':
        theta *= 2*np.pi/360
        phi *= 2*np.pi/360
    elif angle == 'revolutions' or angle == 'tauradians':
        theta *= 2*np.pi
        phi*= 2*np.pi
    elif angle == 'piradians':
        theta *= np.pi
        phi*= np.pi
    
    return [r,theta,phi]
